#客户端的配置项介绍
#动态配置功能,强烈建议加上哨兵的agent一起使用,哨兵上有对这个客户端有详细的监控.
#配置项以配置文件为主，如果配置文件未找到，则从系统环境中查询，所以配置项也可以通过jvm的启动参数注入,如 -Dapp.name=xxx
#
#
#大多数的情况,配置文件中只需要配置app.name与cluster.name
#应用的名称,要与cmdb上的应用名称一致(必填).
com.cmdb.appname=music-server-sample
#加密使用(必填,目前可以随便填写字符串)
secret=wfiaeweir83r933
#!!!集群名字,与cmdb上名称一致，在一台机子上部署了相同应用的不同集群的时候，需要配置这个属性。不然服务端无法确认应用数据哪个集群。
#cluster.name=springboot-web
#
#集群环境,与cmdb上保持一致
#cluster.env=
#
#master.server.address,config.server.address这个两个配置项,如果客户端配置地址列表，系统启动的时候会将配置的地址列表
#加入到地址池中.
#
#客户端指定master服务器的地址,包括ip和端口,以逗号分隔,如下
master.server.address=music-config.service.163.org
#
#
#客户端指定配置服务器的地址,配置的方式包括ip和端口,以逗号分隔,如下
#config.server.address=192.168.1.3:8080,192.168.1.4:8081
#
#
#调用配置服务器的重试次数,默认值(总数),即池中有多少个地址就重试几次。
#每次调用的时候都重新从池中获取一个地址尝试调用,并不是对一个地址进行重试.
#invoke.config.retry.times=
#
#
#调用Master服务器的重试次数,默认值(总数),即池中有多少个地址就重试几次。
#每次调用的时候都重新从池中获取一个地址尝试调用,并不是对一个地址进行重试.
#invoke.master.retry.times=3
#
#
#周期轮训master上拉取配置,更新集群信息/配置服务器地址列表的时间,单位秒(默认60)
#config.server.update.period=60
#
#
#
#调用监听的回调接口,采用的是异步线程池调用.
#采用的RejectedExecutionHandler策略,是打印error日志的方式.
#<重要!!!>业务的回调接口,应该不要做长时间的任务,如果业务上的确需要处理复杂的逻辑,那么业务自身另起线程执行，不要占用客户端的回调线程。
#
#核心线程数,默认值:cpu个数
#notify.threadpool.core=
#
#最大线程数线程数,默认值reload.thread.core.size*2+1
#notify.threadpool.max=
#
#等待队列长度,默认30
#notify.threadpool.queue=30
#
#
#是否允许从本地缓存文件启动应用,默认是true.只有启动的时候连接不上配置服务器的时候,才会从本地文件启动。
#如果配置成false,那么框架内部本地不会去备份远程的配置项
#local.recovery.enable=true
#
#
#下载时,临时文件的存放目录,设置的时候需要考虑到,一台机器上部署多个应用的场景,防止文件被覆盖.
#默认值是classpath/opconfig_download_tmp
#local.download.dir.temp=
#
#
#本地备份配置项的仓库目录,默认值是:classpath/spring-opconfig
#设置的时候需要考虑到,一台机器上部署多个应用的场景,防止文件被覆盖.
#spring.config.dir=
#
#日志打印的目录,默认路径是usr.home/opconfig_log"
#log.dir=
#
#日志滚动的个数,默认为3
#log.file.count=3
#
#每个日志文件的大小,默认50M(1024*1024*50)
#log.file.size=52428800
#

